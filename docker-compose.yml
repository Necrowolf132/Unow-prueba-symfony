services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: symfony-api
    environment:
      APP_ENV: dev
      APP_SECRET: sgkxOSxSKVXFDcbpMOYvamAFtPCSESsg
      DATABASE_URL: mysql://root:sgkxOSxSKVXFDcbpMOYvamAFtPCSESsg@mysql:3306/symfony_db
      CORS_ALLOW_ORIGIN: https://unow-symfony-prueba-front.develop.jeelidev.online/
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html
    networks:
      - app-network
    depends_on:
      - mysql

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/usr/src/app
    environment:
      NODE_ENV: development
    networks:
      - app-network

  microservice:
    build:
      context: ./microservice
      dockerfile: Dockerfile
    container_name: python-microservice
    ports:
      - "5000:5000"
    volumes:
      - ./microservice:/usr/src/app
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: sgkxOSxSKVXFDcbpMOYvamAFtPCSESsg
      MYSQL_DATABASE: symfony_db
    ports:
      - "3306:3306"
    volumes:
      - ./db_data:/var/lib/mysql
      - ./backups/:/docker-entrypoint-initdb.d
    networks:
      - app-network

  nginx:
    image: nginx:latest
    container_name: nginx-proxy
    ports:
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/nginx/certs

    networks:
      - app-network
    depends_on:
      - mysql
      # - frontend
      # - microservice
      - backend

networks:
  app-network:
    driver: bridge
