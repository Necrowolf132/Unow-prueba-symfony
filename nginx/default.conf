server_names_hash_bucket_size 128; 
server {
    listen 443 ssl;
    server_name unow-symfony-prueba-api.develop.jeelidev.online;

    access_log    /var/log/nginx/access.log;

    # Configuración SSL
    ssl_certificate /etc/nginx/certs/_wildcard.develop.jeelidev.online.pem;
    ssl_certificate_key /etc/nginx/certs/_wildcard.develop.jeelidev.online-key.pem;

    # Redirige las peticiones a /api/ al backend
    location / {
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

}
server {
    listen 443 ssl;
    server_name unow-symfony-prueba-front.develop.jeelidev.online;

    access_log    /var/log/nginx/access.log;

    # Configuración SSL
    ssl_certificate /etc/nginx/certs/_wildcard.develop.jeelidev.online.pem;
    ssl_certificate_key /etc/nginx/certs/_wildcard.develop.jeelidev.online-key.pem;

    # Redirige las peticiones a la raíz / al frontend
    #location / {
    #    proxy_pass http://frontend:3000;
    #    proxy_set_header Host $host;
    #    proxy_set_header X-Real-IP $remote_addr;
    #}

}
server {
    listen 443 ssl;
    server_name unow-symfony-prueba-micro.develop.jeelidev.online;

    access_log    /var/log/nginx/access.log;

    # Configuración SSL
    ssl_certificate /etc/nginx/certs/_wildcard.develop.jeelidev.online.pem;
    ssl_certificate_key /etc/nginx/certs/_wildcard.develop.jeelidev.online-key.pem;


    # Redirige las peticiones a /microservice/ al microservicio
    #location / {
    #    proxy_pass http://microservice:5000;
    #    proxy_set_header Host $host;
    #    proxy_set_header X-Real-IP $remote_addr;
    #}
}